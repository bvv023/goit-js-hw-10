{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const now = new Date();\n\n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: now,\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      const selectedDate = selectedDates[0];\n\n      if (selectedDate.getTime() <= now.getTime()) {\n        iziToast.error({\n          title: 'Error',\n          message: 'Please choose a date in the future',\n        });\n\n        document.querySelector('[data-start]').disabled = true;\n      } else {\n        document.querySelector('[data-start]').disabled = false;\n      }\n    },\n  };\n\n  const flatpickrInstance = flatpickr(\"#datetime-picker\", options);\n\n  function addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  function updateTimer(endDate) {\n    const remainingTime = endDate - new Date();\n\n    if (remainingTime <= 0) {\n      clearInterval(timerInterval);\n      document.querySelector('[data-start]').disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(remainingTime);\n\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n  }\n\n  let timerInterval;\n\n  document.querySelector('[data-start]').addEventListener('click', function() {\n    const selectedDate = flatpickrInstance.selectedDates[0];\n\n    this.disabled = true;\n\n    timerInterval = setInterval(function() {\n      updateTimer(selectedDate);\n    }, 1000);\n\n    \n    updateTimer(selectedDate);\n  });\n});\n"],"names":["convertMs","ms","days","hours","minutes","seconds","now","flatpickrInstance","flatpickr","selectedDates","addLeadingZero","value","updateTimer","endDate","remainingTime","timerInterval","selectedDate"],"mappings":"oGAGA,SAASA,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAAS,iBAAiB,mBAAoB,UAAW,CACvD,MAAMC,EAAM,IAAI,KAuBVC,EAAoBC,EAAU,mBArBpB,CACd,WAAY,GACZ,UAAW,GACX,YAAaF,EACb,gBAAiB,EACjB,QAAQG,EAAe,CACAA,EAAc,CAAC,EAEnB,QAAO,GAAMH,EAAI,QAAO,GACvC,SAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACnB,CAAS,EAED,SAAS,cAAc,cAAc,EAAE,SAAW,IAElD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACL,CAEiE,EAE/D,SAASI,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAED,SAASC,EAAYC,EAAS,CAC5B,MAAMC,EAAgBD,EAAU,IAAI,KAEpC,GAAIC,GAAiB,EAAG,CACtB,cAAcC,CAAa,EAC3B,SAAS,cAAc,cAAc,EAAE,SAAW,GAClD,MACD,CAED,KAAM,CAAE,KAAAb,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUc,CAAa,EAEjE,SAAS,cAAc,aAAa,EAAE,YAAcJ,EAAeR,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcQ,EAAeP,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcO,EAAeN,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcM,EAAeL,CAAO,CAC9E,CAED,IAAIU,EAEJ,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,UAAW,CAC1E,MAAMC,EAAeT,EAAkB,cAAc,CAAC,EAEtD,KAAK,SAAW,GAEhBQ,EAAgB,YAAY,UAAW,CACrCH,EAAYI,CAAY,CACzB,EAAE,GAAI,EAGPJ,EAAYI,CAAY,CAC5B,CAAG,CACH,CAAC"}